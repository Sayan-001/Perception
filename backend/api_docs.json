{
  "generated_at": "2025-03-22 13:59:58",
  "endpoints": [
    {
      "path": "/type",
      "method": "GET",
      "description": "Used to get the type of user.",
      "parameters": {
        "email": {
          "required": true,
          "type": "<class 'str'>"
        }
      },
      "function_name": "get_type"
    },
    {
      "path": "/type",
      "method": "POST",
      "description": "Used to add the type of user if not exists, else raise an error.",
      "parameters": {
        "request": {
          "required": true,
          "type": "<class 'app.routes.types.AddUserType'>"
        }
      },
      "function_name": "add_type"
    },
    {
      "path": "/tsa",
      "method": "POST",
      "description": "Add a teacher-student association to the database.",
      "parameters": {
        "request": {
          "required": true,
          "type": "<class 'app.routes.association.Association'>"
        }
      },
      "function_name": "add_tsa"
    },
    {
      "path": "/tsa",
      "method": "DELETE",
      "description": "Remove a teacher-student association from the database.",
      "parameters": {
        "request": {
          "required": true,
          "type": "<class 'app.routes.association.Association'>"
        }
      },
      "function_name": "delete_tsa"
    },
    {
      "path": "/teacherlist",
      "method": "GET",
      "description": "Get all teachers associated with a student.",
      "parameters": {
        "email": {
          "required": true,
          "type": "<class 'pydantic.networks.EmailStr'>"
        }
      },
      "function_name": "get_teachers"
    },
    {
      "path": "/studentlist",
      "method": "GET",
      "description": "Get all students associated with a teacher.",
      "parameters": {
        "email": {
          "required": true,
          "type": "<class 'pydantic.networks.EmailStr'>"
        }
      },
      "function_name": "get_students"
    },
    {
      "path": "/paper/list",
      "method": "GET",
      "description": "Retrieve all papers with just the metadata (required for the cards), based on user type.",
      "parameters": {
        "email": {
          "required": true,
          "type": "<class 'str'>"
        },
        "user_type": {
          "required": true,
          "type": "typing.Literal['teacher', 'student']"
        }
      },
      "function_name": "get_paperlist"
    },
    {
      "path": "/paper/create",
      "method": "POST",
      "description": "Create a new question paper.",
      "parameters": {
        "paper": {
          "required": true,
          "type": "<class 'app.routes.papers.Paper'>"
        }
      },
      "function_name": "create_paper"
    },
    {
      "path": "/paper/view/{paper_id}",
      "method": "GET",
      "description": "Retrieve a paper with all the details.",
      "parameters": {
        "paper_id": {
          "required": true,
          "type": "<class 'str'>"
        },
        "viewer_email": {
          "required": true,
          "type": "<class 'str'>"
        },
        "viewer_type": {
          "required": true,
          "type": "typing.Literal['teacher', 'student']"
        }
      },
      "function_name": "get_paper"
    },
    {
      "path": "/paper/attempt/{paper_id}",
      "method": "GET",
      "description": "Retrieve a paper for attempting.",
      "parameters": {
        "paper_id": {
          "required": true,
          "type": "<class 'str'>"
        },
        "student_email": {
          "required": true,
          "type": "<class 'str'>"
        }
      },
      "function_name": "get_attempt_paper"
    },
    {
      "path": "/paper/attempt",
      "method": "POST",
      "description": "Attempt/Save a paper.",
      "parameters": {
        "request": {
          "required": true,
          "type": "<class 'app.routes.papers.SubmitAnswerRequest'>"
        }
      },
      "function_name": "attempt_paper"
    },
    {
      "path": "/paper/expire/{paper_id}",
      "method": "PUT",
      "description": "Expire a paper.",
      "parameters": {
        "paper_id": {
          "required": true,
          "type": "<class 'str'>"
        }
      },
      "function_name": "expire_paper"
    },
    {
      "path": "/paper/unexpire/{paper_id}",
      "method": "PUT",
      "description": "Unexpire a paper.",
      "parameters": {
        "paper_id": {
          "required": true,
          "type": "<class 'str'>"
        }
      },
      "function_name": "unexpire_paper"
    },
    {
      "path": "/paper/{paper_id}",
      "method": "DELETE",
      "description": "Delete a paper if it belongs to the requesting teacher.",
      "parameters": {
        "paper_id": {
          "required": true,
          "type": "<class 'str'>"
        }
      },
      "function_name": "delete_paper"
    },
    {
      "path": "/evaluate/{paper_id}",
      "method": "PUT",
      "description": "Evaluate a paper using Groq.",
      "parameters": {
        "paper_id": {
          "required": true,
          "type": "<class 'str'>"
        }
      },
      "function_name": "evaluate_paper"
    },
    {
      "path": "/reset/{paper_id}",
      "method": "PUT",
      "description": "Reset evaluation for a paper.",
      "parameters": {
        "paper_id": {
          "required": true,
          "type": "<class 'str'>"
        }
      },
      "function_name": "reset_evaluation"
    }
  ]
}